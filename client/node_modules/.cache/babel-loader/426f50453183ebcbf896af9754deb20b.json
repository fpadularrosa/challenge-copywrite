{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport getText from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nconst validate_input = input => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  if (input) {\n    dispatch(getText(input));\n  } else if (Number(input)) {\n    alert('Must be a string');\n  } else if (!input) {\n    alert('write something');\n  }\n};\n\n_s(validate_input, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nexport default validate_input;","map":{"version":3,"names":["getText","useDispatch","validate_input","input","dispatch","Number","alert"],"sources":["C:/Users/Franco/Documents/Proyectos/CWTech/challenge-copywrite/client/src/utils/index.js"],"sourcesContent":["import getText from '../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst validate_input = (  input  ) => {\r\n    const dispatch = useDispatch()\r\n\r\n    if(input) {\r\n        dispatch(getText(input))\r\n    } else if(Number(input)) {\r\n        alert('Must be a string')\r\n    } else if(!input) {\r\n        alert('write something')\r\n    }\r\n\r\n}\r\n\r\nexport default validate_input"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,cAAc,GAAMC,KAAH,IAAe;EAAA;;EAClC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;EAEA,IAAGE,KAAH,EAAU;IACNC,QAAQ,CAACJ,OAAO,CAACG,KAAD,CAAR,CAAR;EACH,CAFD,MAEO,IAAGE,MAAM,CAACF,KAAD,CAAT,EAAkB;IACrBG,KAAK,CAAC,kBAAD,CAAL;EACH,CAFM,MAEA,IAAG,CAACH,KAAJ,EAAW;IACdG,KAAK,CAAC,iBAAD,CAAL;EACH;AAEJ,CAXD;;GAAMJ,c;UACeD,W;;;AAYrB,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}