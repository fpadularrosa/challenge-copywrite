{"ast":null,"code":"'use strict';\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar urllib = require('url');\n\nvar utillib = require('util');\n\nvar zlib = require('zlib');\n\nvar dns = require('dns');\n\nvar Stream = require('stream').Readable;\n\nvar CookieJar = require('./cookiejar').CookieJar;\n\nvar encodinglib = require('encoding');\n\nvar net = require('net');\n\nvar USE_ALLOC = typeof Buffer.alloc === 'function';\nexports.FetchStream = FetchStream;\nexports.CookieJar = CookieJar;\nexports.fetchUrl = fetchUrl;\n\nfunction FetchStream(url, options) {\n  Stream.call(this);\n  options = options || {};\n  this.url = url;\n\n  if (!this.url) {\n    return this.emit('error', new Error('url not defined'));\n  }\n\n  this.userAgent = options.userAgent || 'FetchStream';\n  this._redirect_count = 0;\n  this.options = options || {};\n  this.normalizeOptions(); // prevent errors before 'error' handler is set by defferring actions\n\n  if (typeof setImmediate !== 'undefined') {\n    setImmediate(this.runStream.bind(this, url));\n  } else {\n    process.nextTick(this.runStream.bind(this, url));\n  }\n\n  this.responseBuffer = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n  this.ended = false;\n  this.readyToRead = 0;\n}\n\nutillib.inherits(FetchStream, Stream);\n\nFetchStream.prototype._read = function (size) {\n  if (this.ended && this.responseBuffer.length === 0) {\n    this.push(null);\n    return;\n  }\n\n  this.readyToRead += size;\n  this.drainBuffer();\n};\n\nFetchStream.prototype.drainBuffer = function () {\n  if (this.readyToRead === 0) {\n    return;\n  }\n\n  if (this.responseBuffer.length === 0) {\n    return;\n  }\n\n  var push;\n  var rest;\n  var restSize;\n\n  if (this.responseBuffer.length > this.readyToRead) {\n    push = USE_ALLOC ? Buffer.alloc(this.readyToRead, '', 'binary') : new Buffer(this.readyToRead, 'binary');\n    this.responseBuffer.copy(push, 0, 0, this.readyToRead);\n    restSize = this.responseBuffer.length - this.readyToRead;\n    rest = USE_ALLOC ? Buffer.alloc(restSize, '', 'binary') : new Buffer(restSize, 'binary');\n    this.responseBuffer.copy(rest, 0, this.readyToRead);\n  } else {\n    push = this.responseBuffer;\n    rest = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n  }\n\n  this.responseBuffer = rest;\n  this.readyToRead = 0;\n\n  if (this.options.encoding) {\n    this.push(push, this.options.encoding);\n  } else {\n    this.push(push);\n  }\n};\n\nFetchStream.prototype.destroy = function (ex) {\n  this.emit('destroy', ex);\n};\n\nFetchStream.prototype.normalizeOptions = function () {\n  // cookiejar\n  this.cookieJar = this.options.cookieJar || new CookieJar(); // default redirects - 10\n  // if disableRedirect is set, then 0\n\n  if (!this.options.disableRedirect && typeof this.options.maxRedirects !== 'number' && !(this.options.maxRedirects instanceof Number)) {\n    this.options.maxRedirects = 10;\n  } else if (this.options.disableRedirects) {\n    this.options.maxRedirects = 0;\n  } // normalize header keys\n  // HTTP and HTTPS takes in key names in case insensitive but to find\n  // an exact value from an object key name needs to be case sensitive\n  // so we're just lowercasing all input keys\n\n\n  this.options.headers = this.options.headers || {};\n  var keys = Object.keys(this.options.headers);\n  var newheaders = {};\n  var i;\n\n  for (i = keys.length - 1; i >= 0; i--) {\n    newheaders[keys[i].toLowerCase().trim()] = this.options.headers[keys[i]];\n  }\n\n  this.options.headers = newheaders;\n\n  if (!this.options.headers['user-agent']) {\n    this.options.headers['user-agent'] = this.userAgent;\n  }\n\n  if (!this.options.headers.pragma) {\n    this.options.headers.pragma = 'no-cache';\n  }\n\n  if (!this.options.headers['cache-control']) {\n    this.options.headers['cache-control'] = 'no-cache';\n  }\n\n  if (!this.options.disableGzip) {\n    this.options.headers['accept-encoding'] = 'gzip, deflate';\n  } else {\n    delete this.options.headers['accept-encoding'];\n  } // max length for the response,\n  // if not set, default is Infinity\n\n\n  if (!this.options.maxResponseLength) {\n    this.options.maxResponseLength = Infinity;\n  } // method:\n  // defaults to GET, or when payload present to POST\n\n\n  if (!this.options.method) {\n    this.options.method = this.options.payload || this.options.payloadSize ? 'POST' : 'GET';\n  } // set cookies\n  // takes full cookie definition strings as params\n\n\n  if (this.options.cookies) {\n    for (i = 0; i < this.options.cookies.length; i++) {\n      this.cookieJar.setCookie(this.options.cookies[i], this.url);\n    }\n  } // rejectUnauthorized\n\n\n  if (typeof this.options.rejectUnauthorized === 'undefined') {\n    this.options.rejectUnauthorized = true;\n  }\n};\n\nFetchStream.prototype.parseUrl = function (url) {\n  var urlparts = urllib.parse(url, false, true),\n      transport,\n      urloptions = {\n    host: urlparts.hostname || urlparts.host,\n    port: urlparts.port,\n    path: urlparts.pathname + (urlparts.search || '') || '/',\n    method: this.options.method,\n    rejectUnauthorized: this.options.rejectUnauthorized\n  };\n\n  switch (urlparts.protocol) {\n    case 'https:':\n      transport = https;\n      break;\n\n    case 'http:':\n    default:\n      transport = http;\n      break;\n  }\n\n  if (transport === https) {\n    if ('agentHttps' in this.options) {\n      urloptions.agent = this.options.agentHttps;\n    }\n\n    if ('agent' in this.options) {\n      urloptions.agent = this.options.agent;\n    }\n  } else {\n    if ('agentHttp' in this.options) {\n      urloptions.agent = this.options.agentHttp;\n    }\n\n    if ('agent' in this.options) {\n      urloptions.agent = this.options.agent;\n    }\n  }\n\n  if (!urloptions.port) {\n    switch (urlparts.protocol) {\n      case 'https:':\n        urloptions.port = 443;\n        break;\n\n      case 'http:':\n      default:\n        urloptions.port = 80;\n        break;\n    }\n  }\n\n  urloptions.headers = this.options.headers || {};\n\n  if (urlparts.auth) {\n    var buf = USE_ALLOC ? Buffer.alloc(Buffer.byteLength(urlparts.auth), urlparts.auth) : new Buffer(urlparts.auth);\n    urloptions.headers.Authorization = 'Basic ' + buf.toString('base64');\n  }\n\n  return {\n    urloptions: urloptions,\n    transport: transport\n  };\n};\n\nFetchStream.prototype.setEncoding = function (encoding) {\n  this.options.encoding = encoding;\n};\n\nFetchStream.prototype.runStream = function (url) {\n  var url_data = this.parseUrl(url),\n      cookies = this.cookieJar.getCookies(url);\n\n  if (cookies) {\n    url_data.urloptions.headers.cookie = cookies;\n  } else {\n    delete url_data.urloptions.headers.cookie;\n  }\n\n  if (this.options.payload) {\n    url_data.urloptions.headers['content-length'] = Buffer.byteLength(this.options.payload || '', 'utf-8');\n  }\n\n  if (this.options.payloadSize) {\n    url_data.urloptions.headers['content-length'] = this.options.payloadSize;\n  }\n\n  if (this.options.asyncDnsLoookup) {\n    var dnsCallback = function (err, addresses) {\n      if (err) {\n        this.emit('error', err);\n        return;\n      }\n\n      url_data.urloptions.headers.host = url_data.urloptions.hostname || url_data.urloptions.host;\n      url_data.urloptions.hostname = addresses[0];\n      url_data.urloptions.host = url_data.urloptions.headers.host + (url_data.urloptions.port ? ':' + url_data.urloptions.port : '');\n\n      this._runStream(url_data, url);\n    }.bind(this);\n\n    if (net.isIP(url_data.urloptions.host)) {\n      dnsCallback(null, [url_data.urloptions.host]);\n    } else {\n      dns.resolve4(url_data.urloptions.host, dnsCallback);\n    }\n  } else {\n    this._runStream(url_data, url);\n  }\n};\n\nFetchStream.prototype._runStream = function (url_data, url) {\n  var req = url_data.transport.request(url_data.urloptions, function (res) {\n    // catch new cookies before potential redirect\n    if (Array.isArray(res.headers['set-cookie'])) {\n      for (var i = 0; i < res.headers['set-cookie'].length; i++) {\n        this.cookieJar.setCookie(res.headers['set-cookie'][i], url);\n      }\n    }\n\n    if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0) {\n      if (!this.options.disableRedirects && this.options.maxRedirects > this._redirect_count && res.headers.location) {\n        this._redirect_count++;\n        req.destroy();\n        this.runStream(urllib.resolve(url, res.headers.location));\n        return;\n      }\n    }\n\n    this.meta = {\n      status: res.statusCode,\n      responseHeaders: res.headers,\n      finalUrl: url,\n      redirectCount: this._redirect_count,\n      cookieJar: this.cookieJar\n    };\n\n    var curlen = 0,\n        maxlen,\n        receive = function (chunk) {\n      if (curlen + chunk.length > this.options.maxResponseLength) {\n        maxlen = this.options.maxResponseLength - curlen;\n      } else {\n        maxlen = chunk.length;\n      }\n\n      if (maxlen <= 0) {\n        return;\n      }\n\n      curlen += Math.min(maxlen, chunk.length);\n\n      if (maxlen >= chunk.length) {\n        if (this.responseBuffer.length === 0) {\n          this.responseBuffer = chunk;\n        } else {\n          this.responseBuffer = Buffer.concat([this.responseBuffer, chunk]);\n        }\n      } else {\n        this.responseBuffer = Buffer.concat([this.responseBuffer, chunk], this.responseBuffer.length + maxlen);\n      }\n\n      this.drainBuffer();\n    }.bind(this),\n        error = function (e) {\n      this.ended = true;\n      this.emit('error', e);\n      this.drainBuffer();\n    }.bind(this),\n        end = function () {\n      this.ended = true;\n\n      if (this.responseBuffer.length === 0) {\n        this.push(null);\n      }\n    }.bind(this),\n        unpack = function (type, res) {\n      var z = zlib['create' + type]();\n      z.on('data', receive);\n      z.on('error', error);\n      z.on('end', end);\n      res.pipe(z);\n    }.bind(this);\n\n    this.emit('meta', this.meta);\n\n    if (res.headers['content-encoding']) {\n      switch (res.headers['content-encoding'].toLowerCase().trim()) {\n        case 'gzip':\n          return unpack('Gunzip', res);\n\n        case 'deflate':\n          return unpack('InflateRaw', res);\n      }\n    }\n\n    res.on('data', receive);\n    res.on('end', end);\n  }.bind(this));\n  req.on('error', function (e) {\n    this.emit('error', e);\n  }.bind(this));\n\n  if (this.options.timeout) {\n    req.setTimeout(this.options.timeout, req.abort.bind(req));\n  }\n\n  this.on('destroy', req.abort.bind(req));\n\n  if (this.options.payload) {\n    req.end(this.options.payload);\n  } else if (this.options.payloadStream) {\n    this.options.payloadStream.pipe(req);\n    this.options.payloadStream.resume();\n  } else {\n    req.end();\n  }\n};\n\nfunction fetchUrl(url, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  var fetchstream = new FetchStream(url, options),\n      response_data,\n      chunks = [],\n      length = 0,\n      curpos = 0,\n      buffer,\n      content_type,\n      callbackFired = false;\n  fetchstream.on('meta', function (meta) {\n    response_data = meta;\n    content_type = _parseContentType(meta.responseHeaders['content-type']);\n  });\n  fetchstream.on('data', function (chunk) {\n    if (chunk) {\n      chunks.push(chunk);\n      length += chunk.length;\n    }\n  });\n  fetchstream.on('error', function (error) {\n    if (error && error.code === 'HPE_INVALID_CONSTANT') {\n      // skip invalid formatting errors\n      return;\n    }\n\n    if (callbackFired) {\n      return;\n    }\n\n    callbackFired = true;\n    callback(error);\n  });\n  fetchstream.on('end', function () {\n    if (callbackFired) {\n      return;\n    }\n\n    callbackFired = true;\n    buffer = USE_ALLOC ? Buffer.alloc(length) : new Buffer(length);\n\n    for (var i = 0, len = chunks.length; i < len; i++) {\n      chunks[i].copy(buffer, curpos);\n      curpos += chunks[i].length;\n    }\n\n    if (content_type.mimeType === 'text/html') {\n      content_type.charset = _findHTMLCharset(buffer) || content_type.charset;\n    }\n\n    content_type.charset = (options.overrideCharset || content_type.charset || 'utf-8').trim().toLowerCase();\n\n    if (!options.disableDecoding && !content_type.charset.match(/^utf-?8$/i)) {\n      buffer = encodinglib.convert(buffer, 'UTF-8', content_type.charset);\n    }\n\n    if (options.outputEncoding) {\n      return callback(null, response_data, buffer.toString(options.outputEncoding));\n    } else {\n      return callback(null, response_data, buffer);\n    }\n  });\n}\n\nfunction _parseContentType(str) {\n  if (!str) {\n    return {};\n  }\n\n  var parts = str.split(';'),\n      mimeType = parts.shift(),\n      charset,\n      chparts;\n\n  for (var i = 0, len = parts.length; i < len; i++) {\n    chparts = parts[i].split('=');\n\n    if (chparts.length > 1) {\n      if (chparts[0].trim().toLowerCase() === 'charset') {\n        charset = chparts[1];\n      }\n    }\n  }\n\n  return {\n    mimeType: (mimeType || '').trim().toLowerCase(),\n    charset: (charset || 'UTF-8').trim().toLowerCase() // defaults to UTF-8\n\n  };\n}\n\nfunction _findHTMLCharset(htmlbuffer) {\n  var body = htmlbuffer.toString('ascii'),\n      input,\n      meta,\n      charset;\n\n  if (meta = body.match(/<meta\\s+http-equiv=[\"']content-type[\"'][^>]*?>/i)) {\n    input = meta[0];\n  }\n\n  if (input) {\n    charset = input.match(/charset\\s?=\\s?([a-zA-Z\\-0-9]*);?/);\n\n    if (charset) {\n      charset = (charset[1] || '').trim().toLowerCase();\n    }\n  }\n\n  if (!charset && (meta = body.match(/<meta\\s+charset=[\"'](.*?)[\"']/i))) {\n    charset = (meta[1] || '').trim().toLowerCase();\n  }\n\n  return charset;\n}","map":{"version":3,"names":["http","require","https","urllib","utillib","zlib","dns","Stream","Readable","CookieJar","encodinglib","net","USE_ALLOC","Buffer","alloc","exports","FetchStream","fetchUrl","url","options","call","emit","Error","userAgent","_redirect_count","normalizeOptions","setImmediate","runStream","bind","process","nextTick","responseBuffer","ended","readyToRead","inherits","prototype","_read","size","length","push","drainBuffer","rest","restSize","copy","encoding","destroy","ex","cookieJar","disableRedirect","maxRedirects","Number","disableRedirects","headers","keys","Object","newheaders","i","toLowerCase","trim","pragma","disableGzip","maxResponseLength","Infinity","method","payload","payloadSize","cookies","setCookie","rejectUnauthorized","parseUrl","urlparts","parse","transport","urloptions","host","hostname","port","path","pathname","search","protocol","agent","agentHttps","agentHttp","auth","buf","byteLength","Authorization","toString","setEncoding","url_data","getCookies","cookie","asyncDnsLoookup","dnsCallback","err","addresses","_runStream","isIP","resolve4","req","request","res","Array","isArray","indexOf","statusCode","location","resolve","meta","status","responseHeaders","finalUrl","redirectCount","curlen","maxlen","receive","chunk","Math","min","concat","error","e","end","unpack","type","z","on","pipe","timeout","setTimeout","abort","payloadStream","resume","callback","undefined","fetchstream","response_data","chunks","curpos","buffer","content_type","callbackFired","_parseContentType","code","len","mimeType","charset","_findHTMLCharset","overrideCharset","disableDecoding","match","convert","outputEncoding","str","parts","split","shift","chparts","htmlbuffer","body","input"],"sources":["C:/Users/Franco/Documents/Proyectos/CWTech/challenge-copywrite/client/node_modules/fetch/lib/fetch.js"],"sourcesContent":["'use strict';\n\nvar http = require('http');\nvar https = require('https');\nvar urllib = require('url');\nvar utillib = require('util');\nvar zlib = require('zlib');\nvar dns = require('dns');\nvar Stream = require('stream').Readable;\nvar CookieJar = require('./cookiejar').CookieJar;\nvar encodinglib = require('encoding');\nvar net = require('net');\n\nvar USE_ALLOC = typeof Buffer.alloc === 'function';\n\nexports.FetchStream = FetchStream;\nexports.CookieJar = CookieJar;\nexports.fetchUrl = fetchUrl;\n\nfunction FetchStream(url, options) {\n    Stream.call(this);\n\n    options = options || {};\n\n    this.url = url;\n    if (!this.url) {\n        return this.emit('error', new Error('url not defined'));\n    }\n\n    this.userAgent = options.userAgent || 'FetchStream';\n\n    this._redirect_count = 0;\n\n    this.options = options || {};\n    this.normalizeOptions();\n\n    // prevent errors before 'error' handler is set by defferring actions\n    if (typeof setImmediate !== 'undefined') {\n        setImmediate(this.runStream.bind(this, url));\n    } else {\n        process.nextTick(this.runStream.bind(this, url));\n    }\n    this.responseBuffer = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n    this.ended = false;\n    this.readyToRead = 0;\n}\nutillib.inherits(FetchStream, Stream);\n\nFetchStream.prototype._read = function (size) {\n    if (this.ended && this.responseBuffer.length === 0) {\n        this.push(null);\n        return;\n    }\n    this.readyToRead += size;\n    this.drainBuffer();\n};\n\nFetchStream.prototype.drainBuffer = function () {\n    if (this.readyToRead === 0) {\n        return;\n    }\n    if (this.responseBuffer.length === 0) {\n        return;\n    }\n    var push;\n    var rest;\n    var restSize;\n\n    if (this.responseBuffer.length > this.readyToRead) {\n        push = USE_ALLOC ? Buffer.alloc(this.readyToRead, '', 'binary') : new Buffer(this.readyToRead, 'binary');\n        this.responseBuffer.copy(push, 0, 0, this.readyToRead);\n        restSize = this.responseBuffer.length - this.readyToRead;\n        rest = USE_ALLOC ? Buffer.alloc(restSize, '', 'binary') : new Buffer(restSize, 'binary');\n        this.responseBuffer.copy(rest, 0, this.readyToRead);\n    } else {\n        push = this.responseBuffer;\n        rest = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n    }\n    this.responseBuffer = rest;\n    this.readyToRead = 0;\n    if (this.options.encoding) {\n        this.push(push, this.options.encoding);\n    } else {\n        this.push(push);\n    }\n};\n\nFetchStream.prototype.destroy = function (ex) {\n    this.emit('destroy', ex);\n};\n\nFetchStream.prototype.normalizeOptions = function () {\n\n    // cookiejar\n    this.cookieJar = this.options.cookieJar || new CookieJar();\n\n    // default redirects - 10\n    // if disableRedirect is set, then 0\n    if (!this.options.disableRedirect && typeof this.options.maxRedirects !== 'number' &&\n        !(this.options.maxRedirects instanceof Number)) {\n        this.options.maxRedirects = 10;\n    } else if (this.options.disableRedirects) {\n        this.options.maxRedirects = 0;\n    }\n\n    // normalize header keys\n    // HTTP and HTTPS takes in key names in case insensitive but to find\n    // an exact value from an object key name needs to be case sensitive\n    // so we're just lowercasing all input keys\n    this.options.headers = this.options.headers || {};\n\n    var keys = Object.keys(this.options.headers);\n    var newheaders = {};\n    var i;\n\n    for (i = keys.length - 1; i >= 0; i--) {\n        newheaders[keys[i].toLowerCase().trim()] = this.options.headers[keys[i]];\n    }\n\n    this.options.headers = newheaders;\n\n    if (!this.options.headers['user-agent']) {\n        this.options.headers['user-agent'] = this.userAgent;\n    }\n\n    if (!this.options.headers.pragma) {\n        this.options.headers.pragma = 'no-cache';\n    }\n\n    if (!this.options.headers['cache-control']) {\n        this.options.headers['cache-control'] = 'no-cache';\n    }\n\n    if (!this.options.disableGzip) {\n        this.options.headers['accept-encoding'] = 'gzip, deflate';\n    } else {\n        delete this.options.headers['accept-encoding'];\n    }\n\n    // max length for the response,\n    // if not set, default is Infinity\n    if (!this.options.maxResponseLength) {\n        this.options.maxResponseLength = Infinity;\n    }\n\n    // method:\n    // defaults to GET, or when payload present to POST\n    if (!this.options.method) {\n        this.options.method = this.options.payload || this.options.payloadSize ? 'POST' : 'GET';\n    }\n\n    // set cookies\n    // takes full cookie definition strings as params\n    if (this.options.cookies) {\n        for (i = 0; i < this.options.cookies.length; i++) {\n            this.cookieJar.setCookie(this.options.cookies[i], this.url);\n        }\n    }\n\n    // rejectUnauthorized\n    if (typeof this.options.rejectUnauthorized === 'undefined') {\n        this.options.rejectUnauthorized = true;\n    }\n};\n\nFetchStream.prototype.parseUrl = function (url) {\n    var urlparts = urllib.parse(url, false, true),\n        transport,\n        urloptions = {\n            host: urlparts.hostname || urlparts.host,\n            port: urlparts.port,\n            path: urlparts.pathname + (urlparts.search || '') || '/',\n            method: this.options.method,\n            rejectUnauthorized: this.options.rejectUnauthorized\n        };\n\n    switch (urlparts.protocol) {\n        case 'https:':\n            transport = https;\n            break;\n        case 'http:':\n        default:\n            transport = http;\n            break;\n    }\n\n    if (transport === https) {\n        if('agentHttps' in this.options){\n            urloptions.agent = this.options.agentHttps;\n        }\n        if('agent' in this.options){\n            urloptions.agent = this.options.agent;\n        }\n    } else {\n        if('agentHttp' in this.options){\n            urloptions.agent = this.options.agentHttp;\n        }\n        if('agent' in this.options){\n            urloptions.agent = this.options.agent;\n        }\n    }\n\n    if (!urloptions.port) {\n        switch (urlparts.protocol) {\n            case 'https:':\n                urloptions.port = 443;\n                break;\n            case 'http:':\n            default:\n                urloptions.port = 80;\n                break;\n        }\n    }\n\n    urloptions.headers = this.options.headers || {};\n\n    if (urlparts.auth) {\n        var buf = USE_ALLOC ? Buffer.alloc(Buffer.byteLength(urlparts.auth), urlparts.auth) : new Buffer(urlparts.auth);\n        urloptions.headers.Authorization = 'Basic ' + buf.toString('base64');\n    }\n\n    return {\n        urloptions: urloptions,\n        transport: transport\n    };\n};\n\nFetchStream.prototype.setEncoding = function (encoding) {\n    this.options.encoding = encoding;\n};\n\nFetchStream.prototype.runStream = function (url) {\n    var url_data = this.parseUrl(url),\n        cookies = this.cookieJar.getCookies(url);\n\n    if (cookies) {\n        url_data.urloptions.headers.cookie = cookies;\n    } else {\n        delete url_data.urloptions.headers.cookie;\n    }\n\n    if (this.options.payload) {\n        url_data.urloptions.headers['content-length'] = Buffer.byteLength(this.options.payload || '', 'utf-8');\n    }\n\n    if (this.options.payloadSize) {\n        url_data.urloptions.headers['content-length'] = this.options.payloadSize;\n    }\n\n    if (this.options.asyncDnsLoookup) {\n        var dnsCallback = (function (err, addresses) {\n            if (err) {\n                this.emit('error', err);\n                return;\n            }\n\n            url_data.urloptions.headers.host = url_data.urloptions.hostname || url_data.urloptions.host;\n            url_data.urloptions.hostname = addresses[0];\n            url_data.urloptions.host = url_data.urloptions.headers.host + (url_data.urloptions.port ? ':' + url_data.urloptions.port : '');\n\n            this._runStream(url_data, url);\n        }).bind(this);\n\n        if (net.isIP(url_data.urloptions.host)) {\n            dnsCallback(null, [url_data.urloptions.host]);\n        } else {\n            dns.resolve4(url_data.urloptions.host, dnsCallback);\n        }\n    } else {\n        this._runStream(url_data, url);\n    }\n};\n\nFetchStream.prototype._runStream = function (url_data, url) {\n\n    var req = url_data.transport.request(url_data.urloptions, (function (res) {\n\n        // catch new cookies before potential redirect\n        if (Array.isArray(res.headers['set-cookie'])) {\n            for (var i = 0; i < res.headers['set-cookie'].length; i++) {\n                this.cookieJar.setCookie(res.headers['set-cookie'][i], url);\n            }\n        }\n\n        if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0) {\n            if (!this.options.disableRedirects && this.options.maxRedirects > this._redirect_count && res.headers.location) {\n                this._redirect_count++;\n                req.destroy();\n                this.runStream(urllib.resolve(url, res.headers.location));\n                return;\n            }\n        }\n\n        this.meta = {\n            status: res.statusCode,\n            responseHeaders: res.headers,\n            finalUrl: url,\n            redirectCount: this._redirect_count,\n            cookieJar: this.cookieJar\n        };\n\n        var curlen = 0,\n            maxlen,\n\n            receive = (function (chunk) {\n                if (curlen + chunk.length > this.options.maxResponseLength) {\n                    maxlen = this.options.maxResponseLength - curlen;\n                } else {\n                    maxlen = chunk.length;\n                }\n\n                if (maxlen <= 0) {\n                    return;\n                }\n\n                curlen += Math.min(maxlen, chunk.length);\n                if (maxlen >= chunk.length) {\n                    if (this.responseBuffer.length === 0) {\n                        this.responseBuffer = chunk;\n                    } else {\n                        this.responseBuffer = Buffer.concat([this.responseBuffer, chunk]);\n                    }\n                } else {\n                    this.responseBuffer = Buffer.concat([this.responseBuffer, chunk], this.responseBuffer.length + maxlen);\n                }\n                this.drainBuffer();\n            }).bind(this),\n\n            error = (function (e) {\n                this.ended = true;\n                this.emit('error', e);\n                this.drainBuffer();\n            }).bind(this),\n\n            end = (function () {\n                this.ended = true;\n                if (this.responseBuffer.length === 0) {\n                    this.push(null);\n                }\n            }).bind(this),\n\n            unpack = (function (type, res) {\n                var z = zlib['create' + type]();\n                z.on('data', receive);\n                z.on('error', error);\n                z.on('end', end);\n                res.pipe(z);\n            }).bind(this);\n\n        this.emit('meta', this.meta);\n\n        if (res.headers['content-encoding']) {\n            switch (res.headers['content-encoding'].toLowerCase().trim()) {\n                case 'gzip':\n                    return unpack('Gunzip', res);\n                case 'deflate':\n                    return unpack('InflateRaw', res);\n            }\n        }\n\n        res.on('data', receive);\n        res.on('end', end);\n\n    }).bind(this));\n\n    req.on('error', (function (e) {\n        this.emit('error', e);\n    }).bind(this));\n\n    if (this.options.timeout) {\n        req.setTimeout(this.options.timeout, req.abort.bind(req));\n    }\n    this.on('destroy', req.abort.bind(req));\n\n    if (this.options.payload) {\n        req.end(this.options.payload);\n    } else if (this.options.payloadStream) {\n        this.options.payloadStream.pipe(req);\n        this.options.payloadStream.resume();\n    } else {\n        req.end();\n    }\n};\n\nfunction fetchUrl(url, options, callback) {\n    if (!callback && typeof options === 'function') {\n        callback = options;\n        options = undefined;\n    }\n    options = options || {};\n\n    var fetchstream = new FetchStream(url, options),\n        response_data, chunks = [],\n        length = 0,\n        curpos = 0,\n        buffer,\n        content_type,\n        callbackFired = false;\n\n    fetchstream.on('meta', function (meta) {\n        response_data = meta;\n        content_type = _parseContentType(meta.responseHeaders['content-type']);\n    });\n\n    fetchstream.on('data', function (chunk) {\n        if (chunk) {\n            chunks.push(chunk);\n            length += chunk.length;\n        }\n    });\n\n    fetchstream.on('error', function (error) {\n        if (error && error.code === 'HPE_INVALID_CONSTANT') {\n            // skip invalid formatting errors\n            return;\n        }\n        if (callbackFired) {\n            return;\n        }\n        callbackFired = true;\n        callback(error);\n    });\n\n    fetchstream.on('end', function () {\n        if (callbackFired) {\n            return;\n        }\n        callbackFired = true;\n\n        buffer = USE_ALLOC ? Buffer.alloc(length) : new Buffer(length);\n        for (var i = 0, len = chunks.length; i < len; i++) {\n            chunks[i].copy(buffer, curpos);\n            curpos += chunks[i].length;\n        }\n\n        if (content_type.mimeType === 'text/html') {\n            content_type.charset = _findHTMLCharset(buffer) || content_type.charset;\n        }\n\n        content_type.charset = (options.overrideCharset || content_type.charset || 'utf-8').trim().toLowerCase();\n\n\n        if (!options.disableDecoding && !content_type.charset.match(/^utf-?8$/i)) {\n            buffer = encodinglib.convert(buffer, 'UTF-8', content_type.charset);\n        }\n\n        if (options.outputEncoding) {\n            return callback(null, response_data, buffer.toString(options.outputEncoding));\n        } else {\n            return callback(null, response_data, buffer);\n        }\n\n    });\n}\n\nfunction _parseContentType(str) {\n    if (!str) {\n        return {};\n    }\n    var parts = str.split(';'),\n        mimeType = parts.shift(),\n        charset, chparts;\n\n    for (var i = 0, len = parts.length; i < len; i++) {\n        chparts = parts[i].split('=');\n        if (chparts.length > 1) {\n            if (chparts[0].trim().toLowerCase() === 'charset') {\n                charset = chparts[1];\n            }\n        }\n    }\n\n    return {\n        mimeType: (mimeType || '').trim().toLowerCase(),\n        charset: (charset || 'UTF-8').trim().toLowerCase() // defaults to UTF-8\n    };\n}\n\nfunction _findHTMLCharset(htmlbuffer) {\n\n    var body = htmlbuffer.toString('ascii'),\n        input, meta, charset;\n\n    if ((meta = body.match(/<meta\\s+http-equiv=[\"']content-type[\"'][^>]*?>/i))) {\n        input = meta[0];\n    }\n\n    if (input) {\n        charset = input.match(/charset\\s?=\\s?([a-zA-Z\\-0-9]*);?/);\n        if (charset) {\n            charset = (charset[1] || '').trim().toLowerCase();\n        }\n    }\n\n    if (!charset && (meta = body.match(/<meta\\s+charset=[\"'](.*?)[\"']/i))) {\n        charset = (meta[1] || '').trim().toLowerCase();\n    }\n\n    return charset;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}